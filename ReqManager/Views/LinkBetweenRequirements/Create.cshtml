@model ReqManager.Entities.Link.LinkBetweenRequirementsEntity
@{
    ViewBag.Title = "Register a new Link between Requirements";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div id="tabs">
        <ul>
            <li><a href="#link">Link</a></li>
            <li><a href="#attributes">Attributes</a></li>
        </ul>
        <div id="link">
            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.TypeLinkID, "TypeLinkID", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("TypeLinkID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TypeLinkID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.RequirementOriginID, "RequirementOriginID", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("RequirementOriginID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.RequirementOriginID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.RequirementTargetID, "RequirementTargetID", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("RequirementTargetID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.RequirementTargetID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </div>
        <div id="attributes">
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.Label("Attribute", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("AttributeID", Enumerable.Empty<SelectListItem>(), "SELECT THE TYPE LINK ATTRIBUTE", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessage("AttributeID", "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Value", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.Editor("value", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessage("value", "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input id="AddAttribute" value="Add" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $("#TypeLinkID").change(function () {
            var id = $(this).val();
            var select = document.getElementById("AttributeID");
            var i;
            for (i = select.options.length - 1 ; i >= 0 ; i--) 
                select.remove(i);

            $('#AttributeID').append("<option value='" + 0 + "'>SELECT THE TYPE LINK ATTRIBUTE</option>");

            $.getJSON('@Url.Action("GetAttributesOfTypeLink", "AttributesTypeLink")', { type: id }, function (response) {
                $.each(response, function (index, item) {
                    var optionExists = ($('#AttributeID option[value=' + item.AttributeID + ']').length > 0);
                    if (!optionExists) 
                        $('#AttributeID').append("<option value='" + item.AttributeID + "'>" + item.description + "</option>");                    
                });
            });
        });

        $("#AddAttribute").click(function () {
            $.ajax({
                cache: false,
                type: "POST",
                url: "@Url.Action("AddAttribute", "LinkBetweenRequirements")",
                data: {
                    AttributeId: $("#TypeLinkID").val(),
                    value: $("#value").val()
                }
            });
        });
    </script>
}
