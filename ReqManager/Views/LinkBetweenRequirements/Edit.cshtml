@model ReqManager.Entities.Link.LinkBetweenRequirementsEntity

@{
    ViewBag.Title = "Edit Link between Requirements";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.LinkRequirementsID)
        @Html.HiddenFor(model => model.CreationUserID)

        <div class="form-group">
            @Html.LabelFor(model => model.RequirementOriginID, "RequirementOriginID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("RequirementOriginID", null, "SELECT THE REQUIREMENT ORIGIN" , htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RequirementOriginID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RequirementTargetID, "RequirementTargetID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("RequirementTargetID", null, "SELECT THE REQUIREMENT TARGET", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RequirementTargetID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TypeLinkID, "TypeLinkID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TypeLinkID", null, "SELECT THE TYPE LINK", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TypeLinkID, "", new { @class = "text-danger" })
            </div>
        </div>


        <fieldset disabled>
            <div class="form-group">
                @Html.LabelFor(model => model.creationDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.creationDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.creationDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.code, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.code, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.code, "", new { @class = "text-danger" })
                </div>
            </div>
        </fieldset>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
