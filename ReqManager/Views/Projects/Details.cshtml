@model ReqManager.ViewModels.ProjectDetailsViewModel

@{
    ViewBag.Title = "Project Details";
}

<div>
    @Html.Hidden("ID", Request.Url.Segments[3].ToString())
    <div id="tabs">
        <ul>
            <li><a href="#prj">Project</a></li>
            <li><a href="#req">Requirements</a></li>
            <li><a href="#requirementMatrix">Requirement Matrix</a></li>
            <li><a href="#art">Artifacts</a></li>
            <li><a href="#stakeholders">Stakeholders</a></li>
        </ul>
        <div id="prj">
            <hr />
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.project.ProjectPhases.description)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.project.ProjectPhases.description)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.project.Users.name)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.project.Users.name)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.project.description)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.project.description)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.project.pathForTraceability)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.project.pathForTraceability)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.project.environmentalInformation)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.project.environmentalInformation)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.project.managementInformation)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.project.managementInformation)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.project.startDate)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.project.startDate)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.project.endDate)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.project.endDate)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.project.creationDate)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.project.creationDate)
                </dd>

            </dl>
        </div>
        <div id="req">
            <table class="table">
                <tr>
                    <th>Code</th>
                    <th>Description</th>
                    <th>Create By</th>
                    <th>Status</th>
                    <th>Type</th>
                    <th>Pre-Traceability</th>
                    <th>Date</th>
                    <th></th>
                </tr>
                @foreach (var item in Model.requirements)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.code)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.title)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Users.name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.RequirementStatus.description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.RequirementType.description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.preTraceability)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.creationDate)
                        </td>
                        <td>
                            @Html.ActionLink("Details", "Details", "Requirement", new { id = item.RequirementID }, null)
                        </td>
                    </tr>
                }
            </table>
        </div>
        <div id="requirementMatrix">
            <table class="table">
                <thead>
                    <tr>
                        @for (int i = 0; i < Model.requirementMatrix.Columns.Count; i++)
                        {
                            <td><a href="" data-code='@Model.requirementMatrix.Columns[i].ColumnName'
                                   onclick="RequirementDetails($(this)); return false;">
                                @Html.Label(Model.requirementMatrix.Columns[i].ColumnName)</a></td>
                        }
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.requirementMatrix.Rows.Count; i++)
                    {
                        <tr>
                            @for (int j = 0; j < Model.requirementMatrix.Columns.Count; j++)
                            {
                                <td>
                                    @if (!string.IsNullOrEmpty(Model.requirementMatrix.Rows[i][j].ToString()))
                                    {
                                        if (j.Equals(0))
                                        {
                                            <a href="" data-code='@Model.requirementMatrix.Rows[i][j].ToString()'
                                                onclick="RequirementDetails($(this)); return false;">
                                                @Html.Label(Model.requirementMatrix.Rows[i][j].ToString())
                                            </a>
                                        }
                                        else
                                        {
                                            <a href="" onclick="ReqToReqLinkDetails($(this)); return false;"
                                               data-origin='@Model.requirementMatrix.Rows[i][0].ToString()'
                                               data-target='@Model.requirementMatrix.Columns[j].ColumnName'>
                                                @Model.requirementMatrix.Rows[i][j].ToString()</a>
                                        }
                                    }
                                </td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div id="art">
            <table class="table">
                <tr>
                    <th>Code</th>
                    <th>Description</th>
                    <th>Type</th>
                    <th>Importance</th>
                    <th>Create By</th>
                    <th>Date</th>
                </tr>
                @foreach (var item in Model.artifacts)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.code)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ArtifactType.description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Importance.description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Users.name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.creationDate)
                        </td>
                    </tr>
                }
            </table>
        </div>
        <div id="stakeholders">
            <table class="table">
                <tr>
                    <th>Stakeholder</th>
                    <th>Classification</th>
                    <th>Creation Date</th>
                </tr>
                @foreach (var item in Model.stakeholders)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.Stakeholders.DisplayName)</td>
                        <td>@Html.DisplayFor(modelItem => item.Stakeholders.StakeHolderClassification.description)</td>
                        <td>@Html.DisplayFor(modelItem => item.creationDate)</td>
                    </tr>
                }
            </table>
        </div>
    </div>
</div>
<p>
    @Html.ActionLink("Add Requirement", "Create", "Requirement", new { id = Model.project.ProjectID }, null) |
    <a href="" onclick="requestPrintDocumentRequirement(); return false;">Print Requirement Document</a> |
    @Html.ActionLink("Edit", "Edit", new { id = Model.project.ProjectID }) |
    @Html.ActionLink("Back to Projects", "Index")
</p>

<div id="modal-requirementDocument" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title"><label>Print Document Requirement</label></h4>
            </div>
            <div class="modal-body">
                <div class="form-horizontal">
                    <div class="form-group">
                        @Html.Label("Requirement Type", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("RequirementTypeID", Enumerable.Empty<SelectListItem>(), "SELECT THE REQUIREMENT TYPE", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessage("RequirementTypeID", "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" onclick="printDocumentRequirement(); return false;">Print</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div id="modal-requirementDetails" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title">Requirements Details</h4>
            </div>
            <div class="modal-body">
                <dl class="dl-horizontal">

                    <dt>
                        Importance
                    </dt>

                    <dd>
                        <label id="importance"></label>
                    </dd>

                    <dt>
                        Status
                    </dt>

                    <dd>
                        <label id="status"></label>
                    </dd>

                    <dt>
                        Type
                    </dt>

                    <dd>
                        <label id="type"></label>
                    </dd>

                    <dt>
                        Create By
                    </dt>

                    <dd>
                        <label id="user"></label>
                    </dd>

                    <dt>
                        Title
                    </dt>

                    <dd>
                        <label id="title"></label>
                    </dd>

                    <dt>
                        Creation Date
                    </dt>

                    <dd>
                        <label id="creationDate"></label>
                    </dd>
                </dl>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div id="modal-link" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title">Link Details</h4>
            </div>
            <div class="modal-body">
                7
                <p>One fine body…</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">

        function printDocumentRequirement() {
            var ProjectID = $("#ID").val();
            var RequirementTypeID = $("#RequirementTypeID").val();
            window.open('/Projects/PrintDocumentRequirement?ProjectID=' + ProjectID + '&RequirementTypeID=' + RequirementTypeID);
            jQuery('#modal-requirementDocument').modal('hide');
        };

        function requestPrintDocumentRequirement() {
            var id = $("#ID").val();
            clearDropDown("RequirementTypeID");
            $('#RequirementTypeID').append("<option value='" + 0 + "'>SELECT THE REQUIREMENT TYPE</option>");

            $.getJSON('@Url.Action("GetRequirementsFromProject", "Projects")', { ProjectID: id }, function (response) {
                $.each(response, function (index, item) {
                    var optionExists = ($('#RequirementTypeID option[value=' + item.RequirementTypeID + ']').length > 0);
                    if (!optionExists)
                        $('#RequirementTypeID').append("<option value='" + item.RequirementTypeID + "'>" + item.RequirementType.description + "</option>");
                });
            });

            jQuery('#modal-requirementDocument').modal();
        }

        function RequirementDetails(requirement) {

            var code = requirement.attr('data-code');

            $.getJSON('@Url.Action("GetWithCode", "Requirement")',
                { code: code }, function (response) {
                    $("#importance").html(response.Importance.description);
                    $('#status').html(response.RequirementStatus.description);
                    $('#type').html(response.RequirementType.description);
                    $('#user').html(response.Users.name);
                    $('#title').html(response.title);
                    $('#creationDate').html(fixDateTime(response.creationDate));
                });

            jQuery('#modal-requirementDetails').modal();
        };

        function ReqToReqLinkDetails(link) {
            var ReqOrigin = link.attr('data-origin');
            var ReqTarget = link.attr('data-target');

            $.getJSON('@Url.Action("GetLink", "LinkBetweenRequirements")',
                { ReqOrigin: ReqOrigin, ReqTarget: ReqTarget }, function (response) {
                    console.log(response);
                });

            jQuery('#modal-link').modal();
        };
    </script>

}