@model ReqManager.ViewModels.RequirementViewModel

@{
    ViewBag.Title = "Edit Requirement";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.RequirementID)
        @Html.HiddenFor(model => model.UserID)
        @Html.HiddenFor(model => model.creationDate)
        @Html.HiddenFor(model => model.code)
        @Html.HiddenFor(model => model.StakeholdersProjectID)
        @Html.HiddenFor(model => model.RequirementTemplateID)

        <fieldset disabled>
            <div class="form-group">
                @Html.LabelFor(model => model.code, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.code, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.code, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserID, "UserID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("UserID", null, "SELECT THE USER", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
                </div>
            </div>
        </fieldset>

        <div class="form-group">
            @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RequirementTemplateID, "RequirementTemplateID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("RequirementTemplateID", null, "SELECT THE TEMPLATE", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RequirementTemplateID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RequirementStatusID, "RequirementStatusID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("RequirementStatusID", null, "SELECT THE STATUS", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RequirementStatusID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RequirementTypeID, "RequirementTypeID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("RequirementTypeID", null, "SELECT THE TYPE", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RequirementTypeID, "", new { @class = "text-danger" })
            </div>
        </div>

        <fieldset disabled>
            <div class="form-group">
                @Html.LabelFor(model => model.StakeholdersProjectID, "StakeholdersProjectID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("StakeholdersProjectID", null, "SELECT THE STAKEHOLDERS", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.StakeholdersProjectID, "", new { @class = "text-danger" })
                </div>
            </div>
        </fieldset>

        <div class="form-group">
            @Html.LabelFor(model => model.ImportanceID, "MeasureImportanceID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("MeasureImportanceID", null, "SELECT THE IMPORTANCE", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ImportanceID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/tinymce/tinymce.min.js"></script>
    <script type="text/javascript">
        tinymce.init({
            selector: '#description',
            height: 350,
            menubar: false,
            plugins: [
                'advlist autolink lists link image charmap print preview anchor textcolor',
                'searchreplace visualblocks code fullscreen',
                'insertdatetime media table contextmenu paste code help'
            ],
            toolbar: 'insert | undo redo |  formatselect | bold italic backcolor  | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | removeformat | help',
            content_css: [
                '//fonts.googleapis.com/css?family=Lato:300,300i,400,400i',
                '//www.tinymce.com/css/codepen.min.css']
        });
    </script>

}
