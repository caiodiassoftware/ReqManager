@model ReqManager.Entities.Project.StakeholderRequirementEntity

@{
    ViewBag.Title = "Create a Relationship between Stakeholder and Requirement";
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.Hidden("ProjectID")

        <div class="form-group">
            @Html.Label("Project", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProjectID", null, "SELECT THE PROJECT",
               htmlAttributes: new { @class = "form-control", @onchange = "search($(this).val())" })
                @Html.ValidationMessage("ProjectID", "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Project Requirements", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProjectRequirementID", Enumerable.Empty<SelectListItem>(), "SELECT THE REQUIREMENT", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProjectRequirementID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Project Stakeholders", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StakeholdersProjectID", Enumerable.Empty<SelectListItem>(), "SELECT THE STAKEHOLDER", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StakeholdersProjectID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">

        function search(id) {
            clearDropDown("ProjectRequirementID");
            clearDropDown("StakeholdersProjectID");

            $('#ProjectRequirementID').append("<option value='" + 0 + "'>SELECT THE REQUIREMENT</option>");
            $('#StakeholdersProjectID').append("<option value='" + 0 + "'>SELECT THE STAKEHOLDER</option>");

            $.getJSON('@Url.Action("GetRequirementsFromProject", "ProjectRequirements")', { ProjectID: id }, function (response) {
                $.each(response, function (index, item) {
                    var optionExists = ($('#ProjectRequirementID option[value=' + item.ProjectRequirementID + ']').length > 0);
                    if (!optionExists)
                        $('#ProjectRequirementID').append("<option value='" + item.ProjectRequirementID + "'>" + item.Requirement.DisplayName + "</option>");
                });
            });

            $.getJSON('@Url.Action("GetStakeholdersFromProject", "StakeholdersProject")', { ProjectID: id }, function (response) {
                $.each(response, function (index, item) {
                    var optionExists = ($('#StakeholdersProjectID option[value=' + item.StakeholdersProjectID + ']').length > 0);
                    if (!optionExists)
                        $('#StakeholdersProjectID').append("<option value='" + item.StakeholdersProjectID + "'>" + item.Stakeholders.DisplayName + "</option>");
                });
            });
        }
    </script>
}
