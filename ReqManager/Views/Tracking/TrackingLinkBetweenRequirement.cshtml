@model ReqManager.ViewModels.TrackingViewModel

@{
    ViewBag.Title = "Tracking Link Between Requirement";
}

<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.Hidden("ID", Request.Url.Segments[3].ToString())
    <div id="tabs">
        <ul>
            <li><a href="#path">Tracking</a></li>
            <li><a href="#tabFiles">Files Found</a></li>
        </ul>

        <div id="path">
            <div class="form-group">
                @Html.Label("R to R", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("LinkBetweenRequirement", Enumerable.Empty<SelectListItem>(), "SELECT THE LINK BETWEEN REQUIREMENT", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessage("LinkBetweenRequirement", "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Project", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Project", Enumerable.Empty<SelectListItem>(), "SELECT THE PROJECT", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessage("Project", "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Path", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Path", Enumerable.Empty<SelectListItem>(), "SELECT THE PATH", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessage("Path", "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button id="track" class="btn btn-default">Track</button>
                </div>
            </div>

        </div>
        <div id="tabFiles">
            @using (Html.BeginForm("OpenFile", "Tracking", FormMethod.Post))
            {
                <div id="files" class="form-group">
                    @Html.Label("Files", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("Files", Enumerable.Empty<SelectListItem>(), "SELECT THE FILE PATH", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessage("Files", "", new { @class = "text-danger" })
                    </div>
                </div>
            }
        </div>

    </div>
</div>

@section Scripts {
    <script type="text/javascript">

        $(function () {

            var LinkID = $('#ID').val();

            $.getJSON('@Url.Action("Get", "LinkBetweenRequirements")', { ID: LinkID }, function (response) {

                $('#LinkBetweenRequirement').append("<option value='" + response.LinkRequirementsID + "'>" + response.DisplayName + "</option>");
                $('#LinkBetweenRequirement').val(LinkID);

                $.getJSON('@Url.Action("Get", "Requirement")', { ID: response.RequirementOriginID }, function (response) {
                    $('#Project').append("<option value='" +    response.Project.ProjectID + "'>" + response.Project.DisplayName + "</option>");
                });
                $.getJSON('@Url.Action("Get", "Requirement")', { ID: response.RequirementTargetID }, function (response) {
                    var optionExists = ($('#Project option[value=' + response.Project.ProjectID + ']').length > 0);
                    if (!optionExists)
                        $('#Project').append("<option value='" + response.Project.ProjectID + "'>" + response.Project.DisplayName + "</option>");                    
                });
            });
        });

        $("#Project").change(function () {
            var id = $(this).val();
            clearDropDown("Path");

            $.getJSON('@Url.Action("GetFolders", "Projects")', { ProjectID: id }, function (response) {
                $('#Path').append("<option value='" + 0 + "'>SELECT THE PATH</option>");
                $.each(response, function (index, item) {
                    $('#Path').append("<option value='" + item + "'>" + item + "</option>");
                });
            });
        });

        $("#track").click(function () {
            var Link = $('#LinkBetweenRequirement').val();
            var Path = $('#Path').val();

            $.getJSON('@Url.Action("TrackingLinkBetweenRequirements", "Tracking")', { Link: Link, Path: Path }, function (response) {
                $.each(response, function (index, item) {
                    var optionExists = ($('#Files option[value=' + item + ']').length > 0);
                    if (!optionExists)
                        $('#Files').append("<option value='" + item + "'>" + item + "</option>");
                });
            });
        });

        $("#Files").change(function () {
            $.ajax({
                cache: false,
                type: "POST",
                url: "@Url.Action("OpenFile", "Tracking")",
                data: {
                    file: $("#Files").val()
                }
            });
        });

    </script>
}
